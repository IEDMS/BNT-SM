<?xml version="1.0" encoding="us-ascii"?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"

    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>

<title>xml_parseany</title>

<link href="geodisemanual.css" rel="stylesheet" type="text/css" />

</head>

<body lang="EN-GB" link="blue" vlink="purple" xml:lang="EN-GB">

<div class="Section1">

<div style=

'border-top:solid windowtext 1.0pt;border-left:none;border-bottom:solid windowtext 1.0pt;border-right:none;padding:1.0pt 0cm 1.0pt 0cm;background:#CCECFF'>

<h3><a name="_Toc104279260" id="_Toc104279260"></a><a name=

"_xml_parseany" id="_xml_parseany"></a>xml_parseany</h3>

</div>

<p class="MsoNormal">Parses an XML string with attributes and

returns corresponding Matlab structure.</p>

<p class="MsoNormal">&nbsp;</p>

<h4>Syntax</h4>

<p class="codesyntax">v = xml_parseany(xmlstr)</p>

<p class="MsoNormal">&nbsp;</p>

<h4>Description</h4>

<p class="MsoNormal">Parses XML string xmlstr and returns the

corresponding Matlab structure, <span class=

"codeinline"><span style='font-size:11.0pt'>v</span></span>. In

comparison with xml_parse, this command reads all XML element

attributes and returns these in additional attribute fields, thus

enabling the user to read most types of XML into a Matlab

variable.</p>

<p class="MsoNormal">This is a non-validating parser. XML entries

starting with the exclamation mark tag "&lt;!" and "&lt;?" are

ignored by the parser.</p>

<p class="MsoNormal">Any substructure is returned as a cell data

type in Matlab as the parser assumes that child elements can

contain any kind of complex XML element.</p>

<p class="MsoNormal">&nbsp;</p>

<h4>Input Arguments</h4>

<p class="MsoNormal" align="left" style=

'margin-left:99.0pt;text-align:left; text-indent:-63.0pt'>

<span class="codeinline"><span style=

'font-size:11.0pt'>xmlstr</span></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

XML string, for example read from file with<br />

<span class="codeinline"><span style='font-size:11.0pt'>xmlstr =

fileread(filename)</span></span></p>

<p class="MsoNormal">&nbsp;</p>

<h4>Output Arguments</h4>

<p class="MsoNormal" align="left" style=

'margin-left:99.0pt;text-align:left; text-indent:-63.0pt'>

<span class="codeinline"><span style=

'font-size:11.0pt'>v</span></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

Matlab variable or structure with field .ATTRIBUTE if XML element

attributes are present.</p>

<p class="MsoNormal">&nbsp;</p>

<h4>Examples</h4>

<p class="MsoNormal">In this example, we specify an XML string and

look at the difference between the <span class=

"codeinline"><span style='font-size:11.0pt'>xml_parse</span></span>

and <span class="codeinline"><span style=

'font-size:11.0pt'>xml_parseany</span></span> functions:</p>

<p class="MsoNormal" align="left" style=

'margin-left:36.0pt;text-align:left; text-indent:-36.0pt'>

&nbsp;</p>

<p class="codeexample">xmlstr = ...</p>

<p class="codeexample">'&lt;root idx="1" type="double" size="1

2"&gt;3.1416 1.4142&lt;/root&gt;';<br />

<br />

v1 = xml_parse(xmlstr);<br />

<br /></p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>v1:&nbsp;

[3.1416, 1.4142]&nbsp; % (class double)</p>

</div>

<p class="codeexample">&nbsp;</p>

<p class="codeexample">v2 = xml_parseany(xmlstr);</p>

<p class="MsoNormal" align="left" style=

'margin-left:36.0pt;text-align:left; text-indent:-36.0pt'>

&nbsp;</p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

v1.ATTRIBUTE.idx = '1'</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

v1.ATTRIBUTE.type = 'double'</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

v1.ATTRIBUTE.size = '1 2'</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>v1.CONTENT =

'3.1416 1.4142'</p>

</div>

<p class="codeexample">&nbsp;</p>

<p class="MsoNormal">We see that the <span class=

"codeinline"><span style='font-size:11.0pt'>xml_parse</span></span>

command uses the specific attributes to convert the content into

the corresponding Matlab data types. The function <span class=

"codeinline"><span style=

'font-size:11.0pt'>xml_parseany</span></span>, however, returns all

attributes in a substructure called ATTRIBUTE and the content in a

field called CONTENT. <span class="codeinline"><span style=

'font-size:11.0pt'>xml_parseany</span></span> does not use the

attributes for type conversions to Matlab data types as these may

not have originated from the XML Toolbox.</p>

<p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal">For more generic XML, the <span class=

"codeinline"><span style=

'font-size:11.0pt'>xml_parseany</span></span> command acts as

follows:</p>

<p class="codeexample" style='margin-left:0cm;line-height:normal'>

&nbsp;</p>

<p class="codeexample" style='line-height:150%'>xmlstr = ...</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '&lt;root color="red"

language="en"&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &lt;project

id="alpha"&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;

&lt;name&gt;Project_Alpha&lt;/name&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;

&lt;author&gt;Arthur&lt;/author&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &lt;link

location="url"&gt;http://www.com/a&lt;/link&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &lt;/project&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &lt;project

id="beta"&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;

&lt;name&gt;Project_Beta&lt;/name&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;

&lt;author&gt;Ben&lt;/author&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &lt;link

location="file"&gt;c:\temp\b.pro&lt;/link&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &lt;/project&gt;</p>

<p class="codeexample" style='line-height:150%'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/root&gt;';</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>v =

xml_parseany(xmlstr)</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;line-height:normal; page-break-after:auto;background:#F3F3F3'>

v =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; project: {[1x1 struct]&nbsp; [1x1

struct]}</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;line-height:normal; page-break-after:auto;background:#F3F3F3'>

&nbsp;</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;line-height:normal; page-break-after:auto;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp; ATTRIBUTE: [1x1 struct]</p>

</div>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>v.ATTRIBUTE</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;line-height:normal; page-break-after:auto;background:#F3F3F3'>

ans =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; color: 'red'</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;line-height:normal; page-break-after:auto;background:#F3F3F3'>

&nbsp;</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;line-height:normal; page-break-after:auto;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp; language: 'en'</p>

</div>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>v.project{1}</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;line-height:normal; background:#F3F3F3'>

ans =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: {[1x1

struct]}</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author: {[1x1 struct]}</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;link: {[1x1

struct]}</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp; ATTRIBUTE: [1x1 struct]</p>

</div>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>

v.project{2}.name{1}</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>ans =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp; ATTRIBUTE: [0x0 struct]</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CONTENT: 'Project_Beta'</p>

</div>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>

v.project{2}.link{1}</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>ans =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp; ATTRIBUTE: [1x1 struct]</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CONTENT: 'c:\temp\b.pro'</p>

</div>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<p class="codeexample" style='line-height:normal'>

v.project{2}.link{1}.ATTRIBUTE</p>

<p class="codeexample" style='line-height:normal'>&nbsp;</p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>ans =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp; location: 'file'</p>

</div>

<p class="codeexample">&nbsp;</p>

<p class="MsoNormal"><b>Note</b></p>

<p class="MsoNormal">All subfields of the returned data structure

are Matlab cell data types and therefore indexed with curly braces

{.}. This adds a bit more complexity for the developer if the level

of nesting is high; however, it also means that XML documents are

returned to Matlab in a well-defined state.</p>

<p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal">Namespaces &amp; valid Matlab variable

names:</p>

<p class="MsoNormal">If an XML element has a namespace attached,

for example "soap:services", the "soap" namespace is transferred

into a subfield of the ATTRIBUTE structure, called "NAMESPACE".

This is done to ensure that the name corresponds to a valid Matlab

variable name. For the same reasons are any hyphens, "-" replaced

by the underscore "_" during the parsing operation.</p>

<p class="MsoNormal">&nbsp;</p>

<h4>See also</h4>

<p class="MsoNormal"><span class="codeinline"><span style=

'font-size:10.0pt'><a href=

"xml_formatany.htm#_xml_formatany">xml_formatany</a>, <a href=

"xml_format.htm#_xml_format_1">xml_format</a>,</span></span>

<span class="codeHyperlink"><span style='font-size:10.0pt'><a href=

"xml_parse.htm#_xml_parse_1">xml_parse</a></span></span><span class="codeinline">

<span style='font-size:10.0pt'>,</span></span> <span class=

"codeHyperlink"><span style='font-size:10.0pt'><a href=

"xml_load.htm#_xml_load_1">xml_load</a></span></span><span class=

"codeinline"><span style='font-size:10.0pt'>,</span></span>

<span class="codeHyperlink"><span style='font-size:10.0pt'><a href=

"xml_save.htm#_xml_save_1">xml_save</a></span></span><span class=

"codeinline"><span style='font-size:10.0pt'>,</span></span>

<span class="codeHyperlink"><span style='font-size:10.0pt'><a href=

"xml_help.htm#_xml_help_1">xml_help</a></span></span></p>

<p class="codeHyperlinkpara">&nbsp;</p>

<br />

<div style=

'border-top:solid windowtext 1.0pt;border-left:none;border-bottom:solid windowtext 1.0pt;border-right:none;padding:1.0pt 0cm 1.0pt 0cm;background:#CCECFF'>

<table width="100%">

<tr>

<td align="left" valign="middle"><b><a href=

"xml_parse.htm"><img src="nav_bar/arrow_left.gif" alt="" /><br />

xml_parse</a></b></td>

<td align="center" valign="middle"><b><a href="index.htm"><img src=

"nav_bar/arrow_up.gif" alt="" /><br />

contents</a></b></td>

<td align="right" valign="middle"><b><a href=

"xml_save.htm"><img src="nav_bar/arrow_right.gif" alt="" /><br />

xml_save</a></b></td>

</tr>

</table>

</div>

<p align="center"><font size="-1">Copyright &copy; 2005, <a href=

"http://www.geodise.org/">The Geodise Project</a>, University of

Southampton</font></p>

</div>

</body>

</html>

