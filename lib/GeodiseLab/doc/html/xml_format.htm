<?xml version="1.0" encoding="us-ascii"?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"

    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>

<title>xml_format</title>

<link href="geodisemanual.css" rel="stylesheet" type="text/css" />

</head>

<body lang="EN-GB" link="blue" vlink="purple" xml:lang="EN-GB">

<div class="Section1">

<div style=

'border-top:solid windowtext 1.0pt;border-left:none;border-bottom:solid windowtext 1.0pt;border-right:none;padding:1.0pt 0cm 1.0pt 0cm;background:#CCECFF'>

<h3 style='page-break-before:auto;background:#CCECFF'><a name=

"_Toc104279255" id="_Toc104279255"></a><a name="_Toc81196948" id=

"_Toc81196948"></a><a name="_xml_format_1" id=

"_xml_format_1"></a>xml_format</h3>

</div>

<p class="MsoNormal">Converts a Matlab variable into an XML

string.</p>

<p class="MsoNormal">&nbsp;</p>

<h4>Syntax</h4>

<p class="codesyntax">xmlstr = xml_format(v)</p>

<p class="codesyntax">xmlstr = xml_format(v,attswitch)</p>

<p class="codesyntax">xmlstr = xml_format(v,attswitch,name)</p>

<p class="MsoNormal">&nbsp;</p>

<h4>Description</h4>

<p class="MsoNormal"><span class="codeinline"><span style=

'font-size:11.0pt'>xml_format</span></span> converts Matlab

variables and data structures (including deeply nested structures)

into XML and returns the XML as string.</p>

<p class="MsoNormal">&nbsp;</p>

<h4>Input Arguments</h4>

<p class="MsoNormal" align="left" style=

'margin-left:99.0pt;text-align:left; text-indent:-63.0pt'>

<span class="codeinline"><span style=

'font-size:11.0pt'>v</span></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

Matlab variable of type "struct", "char", "double"(numeric),

"complex", "sparse", "cell", or "logical"(boolean).<br />

<br /></p>

<p class="MsoNormal" align="left" style=

'margin-left:99.0pt;text-align:left; text-indent:-63.0pt'>

<span class="codeinline"><span style=

'font-size:11.0pt'>attswitch</span></span> optional,

default='on':<br />

'on' writes header attributes <span class="codeinline"><span style=

'font-size: 11.0pt'>idx</span></span>, <span class=

"codeinline"><span style='font-size:11.0pt'>size</span></span>,

<span class="codeinline"><span style=

'font-size:11.0pt'>type</span></span> for identification by Matlab

when parsing the XML later;<br />

'off' writes "plain" XML without header attributes.<br />

<br /></p>

<p class="MsoNormal" align="left" style=

'margin-left:99.0pt;text-align:left; text-indent:-63.0pt'>

<span class="codeinline"><span style=

'font-size:11.0pt'>name</span></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

optional, give root element a specific name, eg. 'project'.</p>

<p class="MsoNormal" align="left" style=

'margin-left:99.0pt;text-align:left; text-indent:-63.0pt'>

&nbsp;</p>

<h4>Output Arguments</h4>

<p class="MsoNormal" align="left" style=

'margin-left:99.0pt;text-align:left; text-indent:-63.0pt'>

<span class="codeinline"><span style=

'font-size:11.0pt'>xmlstr</span></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

string, containing XML description of the variable <span class=

"codeinline"><span style='font-size:11.0pt'>v</span></span>.</p>

<p class="MsoNormal" align="left" style='text-align:left'>

&nbsp;</p>

<p class="MsoNormal" align="left" style='text-align:left'>The root

element of the created XML string is called 'root' by default but

this can be overwritten with the <span class=

"codeinline"><span style='font-size:11.0pt'>name</span></span>

input parameter. A default <span class="codeinline"><span style=

'font-size:11.0pt'>xml_tb_version</span></span> attribute is added

to the root element unless <span class="codeinline"><span style=

'font-size:11.0pt'>attswitch</span></span> is set to 'off'.</p>

<p class="MsoNormal" align="left" style='text-align:left'>

&nbsp;</p>

<p class="MsoNormal">If <span class="codeinline"><span style=

'font-size:11.0pt'>attswitch</span></span> is left empty, [], or

set to 'on', the default attributes <span class=

"codeinline"><span style='font-size:11.0pt'>idx</span></span>,

<span class="codeinline"><span style=

'font-size:11.0pt'>type</span></span>, and <span class=

"codeinline"><span style='font-size:11.0pt'>size</span></span> will

be added to the XML element headers. This allows <span class=

"codeinline"><span style='font-size:11.0pt'>xml_parse</span></span>

to parse and convert the XML string correctly back into the

original Matlab variable or data structure.</p>

<p class="MsoNormal">If <span class="codeinline"><span style=

'font-size:11.0pt'>attswitch</span></span> is set to 'off', some of

the information is lost and subsequently the contents of XML

elements will be read in as strings when converting back using

<span class="codeinline"><span style=

'font-size:11.0pt'>xml_parse</span></span>.</p>

<p class="MsoNormal" align="left" style='text-align:left'>

&nbsp;</p>

<h4>Examples</h4>

<p class="MsoNormal" align="left" style=

'margin-left:36.0pt;text-align:left; text-indent:-36.0pt'>

&nbsp;</p>

<p class="MsoNormal">This example shows how to convert a simple

number into an XML string. Note that we could have used

<span class="codeinline"><span style=

'font-size:11.0pt'>xml_format(5)</span></span> instead.</p>

<p class="codeexample">v = 5;</p>

<p class="codeexample">xmlstr = xml_format(v)</p>

<p class="code"><span class="codeinline"><span style=

'font-size:11.0pt'>&nbsp;</span></span></p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>xmlstr =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>&lt;root

xml_tb_version="3.0" idx="1" type="double"<br />

&nbsp;size="1 1"&gt;5&lt;/root&gt;</p>

</div>

<p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal">We can tell the command to ignore all the

attributes and obtain the following XML:</p>

<p class="codeexample">xmlstr = xml_format(v,'off')</p>

<p class="code"><span class="codeinline"><span style=

'font-size:11.0pt'>&nbsp;</span></span></p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>xmlstr =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&lt;root&gt;5&lt;/<span class="codeoutputChar">root&gt;</span></p>

</div>

<p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal">The root elements can be assigned a different

name by adding this as third parameter to the <span class=

"codeinline"><span style=

'font-size: 11.0pt'>xml_format</span></span> function:</p>

<p class="codeexample">xmlstr =

xml_format(v,'off','myXmlNumber')</p>

<p class="code"><span class="codeinline"><span style=

'font-size:11.0pt'>&nbsp;</span></span></p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>xmlstr =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&lt;myXmlNumber&gt;5&lt;/myXmlNumber&gt;</p>

</div>

<p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal">This example shows how pre-defined Matlab data

(here pi) is translated into XML. The number of decimals stored is

the number required to reconstruct the exact same variable in

Matlab from XML with the <span class="codeinline"><span style=

'font-size:11.0pt'>xml_parse</span></span> function.</p>

<p class="MsoNormal" align="left" style=

'margin-left:36.0pt;text-align:left; text-indent:-36.0pt'>

&nbsp;</p>

<p class="codeexample">v = pi;</p>

<p class="codeexample">xmlstr = xml_format(v,[],'pi')</p>

<p class="MsoNormal"><span class="codeinline"><span style=

'font-size:11.0pt'>&nbsp;</span></span></p>

<p class="MsoNormal"><span class="codeinline"><span style=

'font-size:11.0pt'>&nbsp;</span></span></p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>xmlstr =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>&lt;pi

xml_tb_version="3.0" idx="1" type="double" size="1 1"&gt;<br />

3.141592653589793&lt;/pi&gt;</p>

</div>

<p class="MsoNormal" align="left" style=

'margin-left:36.0pt;text-align:left; text-indent:-36.0pt'>

&nbsp;</p>

<p class="MsoNormal" align="left" style=

'margin-left:36.0pt;text-align:left; text-indent:-36.0pt'>Character

arrays or strings can also be converted into XML:</p>

<p class="MsoNormal" align="left" style='text-align:left'>

&nbsp;</p>

<p class="codeexample">v = 'The Hitchhikers Guide to the

Galaxy';</p>

<p class="codeexample">xmlstr = xml_format(v);</p>

<p class="code"><span class="codeinline"><span style=

'font-size:11.0pt'>&nbsp;</span></span></p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>xmlstr =</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>&lt;root

xml_tb_version="3.0" idx="1" type="char" size="1 35"&gt;<br />

The Hitchhikers Guide to the Galaxy&lt;/root&gt;</p>

</div>

<p class="MsoNormal" align="left" style=

'margin-left:36.0pt;text-align:left; text-indent:-36.0pt'>

&nbsp;</p>

<p class="MsoNormal">One of the most powerful ways to use the XML

Toolbox is to convert whole data structures (with substructures)

which can contain any Matlab data type.</p>

<p class="code" style='margin-left:36.0pt'><span class=

"codeinline"><span style=

'font-size:11.0pt'>&nbsp;</span></span></p>

<p class="codeexample">v.project.name = 'my Project no. 001';</p>

<p class="codeexample">v.project.date = datestr(now,31);</p>

<p class="codeexample">v.project.uid&nbsp; =

'208d0174-a752-f391-faf2-45bc397';</p>

<p class="codeexample">v.comment = 'This is a new project';</p>

<p class="codeexample">&nbsp;</p>

<p class="codeexample">xmlstr = xml_format(v,'off');</p>

<p class="code"><span class="codeinline"><span style=

'font-size:11.0pt'>&nbsp;</span></span></p>

<div style=

'border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt; background:#F3F3F3;margin-left:42.55pt;margin-right:8.5pt'>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>xmlstr

=<br />

&lt;root&gt;</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>&nbsp;

&lt;project&gt;</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp; &lt;name&gt;my Project no. 001&lt;/name&gt;</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp; &lt;date&gt;2004-09-09 16:18:29&lt;/date&gt;</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&nbsp;&nbsp;&nbsp;

&lt;uid&gt;208d0174-a752-f391-faf2-45bc397&lt;/uid&gt;</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>&nbsp;

&lt;/project&gt;</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>&nbsp;

&lt;comment&gt;This is a new project&lt;/comment&gt;</p>

<p class="codeoutput" style=

'margin:0cm;margin-bottom:.0001pt;background:#F3F3F3'>

&lt;/root&gt;</p>

</div>

<h4>Notes</h4>

<p class="MsoNormal">If different attributes are required in the

output string, please see description for <span class=

"codeinline"><span style=

'font-size:11.0pt'>xml_formatany.</span></span></p>

<p class="MsoNormal">&nbsp;</p>

<h4>See also</h4>

<p class="MsoNormal" align="left" style='text-align:left'>

<span class="codeinline"><span style='font-size:10.0pt'><a href=

"xml_parseany.htm#_xml_parseany">xml_parseany</a>, <a href=

"xml_formatany.htm#_xml_formatany">xml_formatany</a>,</span></span>

<span class="codeHyperlink"><span style='font-size:10.0pt'><a href=

"xml_parse.htm#_xml_parse_1">xml_parse</a></span></span><span class="codeinline">

<span style='font-size:10.0pt'>,</span></span> <span class=

"codeHyperlink"><span style='font-size:10.0pt'><a href=

"xml_load.htm#_xml_load_1">xml_load</a></span></span><span class=

"codeinline"><span style='font-size:10.0pt'>,</span></span>

<span class="codeHyperlink"><span style='font-size:10.0pt'><a href=

"xml_save.htm#_xml_save_1">xml_save</a></span></span><span class=

"codeinline"><span style='font-size:10.0pt'>,</span></span>

<span class="codeHyperlink"><span style='font-size:10.0pt'><a href=

"xml_help.htm#_xml_help_1">xml_help</a></span></span></p>

<br />

<div style=

'border-top:solid windowtext 1.0pt;border-left:none;border-bottom:solid windowtext 1.0pt;border-right:none;padding:1.0pt 0cm 1.0pt 0cm;background:#CCECFF'>

<table width="100%">

<tr>

<td align="left" valign="middle"><b><a href=

"xmltoolbox.htm"><img src="nav_bar/arrow_left.gif" alt="" /><br />

xmltoolbox</a></b></td>

<td align="center" valign="middle"><b><a href="index.htm"><img src=

"nav_bar/arrow_up.gif" alt="" /><br />

contents</a></b></td>

<td align="right" valign="middle"><b><a href=

"xml_formatany.htm"><img src="nav_bar/arrow_right.gif" alt=

"" /><br />

xml_formatany</a></b></td>

</tr>

</table>

</div>

<p align="center"><font size="-1">Copyright &copy; 2005, <a href=

"http://www.geodise.org/">The Geodise Project</a>, University of

Southampton</font></p>

</div>

</body>

</html>

